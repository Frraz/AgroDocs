# Generated by Django 5.2.7 on 2025-10-25 21:24

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('matricula', models.CharField(max_length=100)),
                ('car_recibo', models.CharField(blank=True, max_length=100, null=True)),
                ('proprietario_nome', models.CharField(max_length=200)),
                ('proprietario_cpf', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Informe o CPF com 11 dígitos (apenas números).', regex='^\\d{11}$')])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fazenda',
                'verbose_name_plural': 'Fazendas',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('data_emissao', models.DateField()),
                ('data_vencimento', models.DateField(db_index=True)),
                ('tipo', models.CharField(choices=[('certidao', 'Certidão'), ('contrato', 'Contrato'), ('licenca', 'Licença'), ('outro', 'Outro')], max_length=20)),
                ('notify_email', models.EmailField(max_length=254)),
                ('notify_whatsapp', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Informe o número em formato internacional E.164. Ex: +5511999999999', regex='^\\+?[1-9]\\d{1,14}$')])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='farms.farm')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'ordering': ['data_vencimento', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_before', models.PositiveIntegerField()),
                ('sent_on', models.DateField(default=django.utils.timezone.localdate)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='farms.document')),
            ],
            options={
                'verbose_name': 'Log de Notificação',
                'verbose_name_plural': 'Logs de Notificações',
            },
        ),
        migrations.CreateModel(
            name='DocumentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_before', models.PositiveIntegerField(choices=[(1, '1 dia antes'), (3, '3 dias antes'), (7, '7 dias antes'), (30, '1 mês antes')])),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='farms.document')),
            ],
            options={
                'verbose_name': 'Lembrete',
                'verbose_name_plural': 'Lembretes',
                'unique_together': {('document', 'days_before')},
            },
        ),
        migrations.AddConstraint(
            model_name='farm',
            constraint=models.UniqueConstraint(fields=('owner', 'matricula'), name='uniq_owner_matricula'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationlog',
            unique_together={('document', 'days_before', 'sent_on')},
        ),
    ]
