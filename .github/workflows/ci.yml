name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Prepare CI requirements
        run: |
          python -m pip install --upgrade pip pipreqs
          if [ -f requirements.ci.txt ]; then
            echo "Using committed requirements.ci.txt"
            cat requirements.ci.txt
          else
            echo "Generating requirements.ci.txt with pipreqs (minimal, sem libs de SO)"
            pipreqs . --force --savepath requirements.ci.txt
            # Garante Django caso o pipreqs não detecte
            if ! grep -Eiq '^django([=<>!]|$)' requirements.ci.txt; then
              echo 'Django==5.2.*' >> requirements.ci.txt
            fi
            echo "---- requirements.ci.txt ----"
            cat requirements.ci.txt
          fi

      - name: Install dependencies
        run: |
          pip install -r requirements.ci.txt

      - name: Django check
        env:
          DJANGO_SECRET_KEY: test
          DEBUG: "True"
          ALLOWED_HOSTS: "localhost,127.0.0.1"
          # Banco padrão do dev; o check não conecta, mas isso evita sustos se settings ler var
          DATABASE_URL: "sqlite:///db.sqlite3"
        run: |
          python manage.py check